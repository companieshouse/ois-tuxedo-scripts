#!/bin/bash

# Stop Tuxedo services for current user.

# -- Internal variables -------------------------------------------------------

service=$(tr [:lower:] [:upper:] <<< ${USER})
now=$(date +%r)
shutdown_log={{ tuxedo_logs_path }}/${USER}/oisclose.log

# -- General ------------------------------------------------------------------

check_user () {
    if [[ "${USER}" == "root" ]]; then
        echo "${script_name}: This script should be executed as a Tuxedo service user not root"
        exit 1
    fi
}

create_temp_log () {
    temp_log=$(mktemp -t ois_stop.XXXXXXX)
    if [[ $? -ne 0 ]]; then
        echo "Unable to create temporary log file" >&2
        exit 1
    fi
}

stop_tux_services () {
    echo "${now} Shutting down Tuxedo servers for user '${USER}'" | tee -a "${shutdown_log}"

    mncq_stop
    tmshutdown -y -w1 2>> "${temp_log}"
    cat "${temp_log}" >> "${shutdown_log}"

    local generic_error=$(grep "ERROR" "${temp_log}")
    local proc_count=$(grep "processes stopped" "${temp_log}" | cut -d " " -f1)

    if [[ -n "${generic_error}" ]]; then
        echo -e "${now} Tuxedo failed to shutdown: service(s) may already be closed" | tee -a "${shutdown_log}"
        echo "${now} Consult the shutdown log file: '${shutdown_log}'"
    else
        echo -e "${now} ${service} Tuxedo services stopped successfully" | tee -a "${shutdown_log}"
        echo "${now} ${proc_count} processes stopped" | tee -a "${shutdown_log}"
        tmipcrm -y ${USER} >> "${shutdown_log}" 2>&1
    fi
}

delete_temp_log () {
    rm -f "${temp_log}"
}

# -- Entrypoint ---------------------------------------------------------------

main () {
    check_user
    create_temp_log
    stop_tux_services
    delete_temp_log
}

main "${@}"
