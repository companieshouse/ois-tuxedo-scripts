#!/bin/bash

# Check ERRORQ and ERRORQ2 queues and generate email alerts if the number of
# error messages exceeds a given threshold.

# -- Internal variables -------------------------------------------------------

script_name=$(basename "$0")
parent_dir="$(cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd)"

error_threshold=5000
error_threshold_exceeded=false

# -- General ------------------------------------------------------------------

check_user () {
    if [[ "${USER}" == "root" ]]; then
        echo "${script_name}: This script should be executed as a Tuxedo service user not root"
        exit 1
    fi
}

create_mail_file () {
    mail_file=$(mktemp -t check_errorq.XXXXXXX)
    if [[ $? -ne 0 ]]; then
        echo "Unable to create temporary mail file" >&2
        exit 1
    fi
}

check_error_queue () {
    local queue_name="$1"
    local queue_error_threshold="$2"

    local queue_error_count=$(grep "${queue_name}:" <(${parent_dir}/tux_qinfo) | cut -d" " -f3)

    if [[ ${queue_error_count} -gt ${queue_error_threshold} ]]; then
        error_threshold_exceeded=true
        echo "${queue_name}  : ${queue_error_count} messages" >> "${mail_file}"
    fi
}

delete_error_messages () {
    local queue_space_name="$1"
    local queue_name="$2"

    local admin_cmd="
    echo
    qopen ${queue_space_name}
    qset ${queue_name}
    qdltm -y
    quit
    END"

    qmadmin 2>/dev/null <<<"$admin_cmd"
}

delete_mail_file () {
    rm -f "${mail_file}"
}


# -- Alerting -----------------------------------------------------------------

send_alert () {
    local mail_header="One or more errorq exceeded ${error_threshold} messages"
    local mail_footer="Deleting"

{% if alerts.enabled %}
    mailx -r $(hostname) -s "WARNING - ERRORQ" {% for recipient in alerts.error_queues %}{{ recipient }} {% endfor %}< <(echo "${mail_header}"; cat "${mail_file}"; echo "${mail_footer}")
{% else %}
    echo "Alerts disabled; no mail message(s) will be generated"
{% endif %}
}

# -- Entrypoint ---------------------------------------------------------------

main () {
    check_user
    create_mail_file

    check_error_queue ERRORQ ${error_threshold}

    if [[ "${USER}" == "publ" ]]; then
        check_error_queue ERRORQ2 ${error_threshold}
    fi

    if [[ "${error_threshold_exceeded}" == "true" ]]; then
        send_alert
    fi

    delete_error_messages QSPACE ERRORQ

    if [[ "${USER}" == "publ" ]]; then
        delete_error_messages QSPACE2 ERRORQ2
    fi

    delete_mail_file
}

main "${@}"
